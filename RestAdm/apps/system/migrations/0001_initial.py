# Generated by Django 2.0.2 on 2020-06-28 09:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import system.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(default='', max_length=20, verbose_name='姓名')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('gender', models.CharField(choices=[('male', '男'), ('famale', '女')], default='male', max_length=10, verbose_name='性别')),
                ('mobile', models.CharField(default='', max_length=11, verbose_name='电话')),
                ('email', models.EmailField(max_length=100, verbose_name='邮箱')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('album_name', models.CharField(max_length=100)),
                ('artist', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AlbumImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('image', models.ImageField(blank=True, help_text='专辑图片', null=True, upload_to='album', verbose_name='专辑图片')),
                ('album', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='album_image', to='system.Album')),
            ],
            options={
                'verbose_name': '专辑图片',
                'verbose_name_plural': '专辑图片',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('image', models.ImageField(blank=True, help_text='图片', null=True, upload_to='banner', verbose_name='图片')),
                ('index', models.IntegerField(default=1, help_text='轮播顺序', verbose_name='轮播顺序')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('num', models.IntegerField(help_text='商品数量', verbose_name='商品数量')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('name', models.CharField(help_text='标题', max_length=100, verbose_name='标题')),
                ('desc', models.CharField(help_text='描述', max_length=1000, verbose_name='描述')),
                ('type', models.IntegerField(choices=[(1, '一级类别'), (2, '二级类别'), (3, '三级类别')], default=1, help_text='类型', verbose_name='类型')),
                ('code', models.CharField(help_text='编码', max_length=100, verbose_name='编码')),
                ('is_top', models.BooleanField(default=False, help_text='是否是顶级菜单', verbose_name='是否是顶级菜单')),
                ('parent_id', models.ForeignKey(blank=True, default=None, help_text='父菜单', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_category', to='system.Category', verbose_name='父菜单')),
            ],
            options={
                'verbose_name': '类别',
                'verbose_name_plural': '类别',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('good_sn', models.IntegerField(blank=True, help_text='货物号', null=True, verbose_name='货物号')),
                ('name', models.CharField(blank=True, help_text='商品名', max_length=100, null=True, verbose_name='商品名')),
                ('desc', models.TextField(blank=True, help_text='商品的描述', max_length=1000, null=True, verbose_name='商品的描述')),
                ('image', models.ImageField(blank=True, help_text='商品的主图片', null=True, upload_to='goods', verbose_name='商品的主图片')),
                ('market_price', models.DecimalField(decimal_places=3, default=0.0, help_text='市场的价格', max_digits=20, verbose_name='市场的价格')),
                ('shop_price', models.DecimalField(decimal_places=3, default=0.0, help_text='本店的价格', max_digits=20, verbose_name='本店的价格')),
                ('click_num', models.IntegerField(default=0, help_text='点击次数', verbose_name='点击次数')),
                ('favorate_num', models.IntegerField(default=0, help_text='喜欢次数', verbose_name='喜欢次数')),
                ('sold_num', models.IntegerField(default=0, help_text='已卖数量', verbose_name='已卖数量')),
                ('good_num', models.IntegerField(default=0, help_text='库存数量', verbose_name='库存数量')),
                ('is_hot', models.BooleanField(default=False, help_text='商品是否热卖', verbose_name='商品是否热卖')),
                ('is_new', models.BooleanField(default=False, help_text='是否新产品', verbose_name='是否新产品')),
                ('ship_free', models.BooleanField(default=False, help_text='是否包邮', verbose_name='是否包邮')),
                ('category', models.ForeignKey(blank=True, default=None, help_text='分类', null=True, on_delete=system.models.Category, related_name='good_list', to='system.Category', verbose_name='分类')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('name', models.CharField(help_text='菜单名', max_length=32, unique=True, verbose_name='菜单名')),
                ('menu_type', models.IntegerField(blank=True, choices=[(1, '一级类目'), (2, '二级类目'), (3, '三级类目')], help_text='类目级别', null=True, verbose_name='类目级别')),
                ('is_top', models.BooleanField(default=False, help_text='是否是顶级菜单', verbose_name='首页显示')),
                ('icon', models.CharField(blank=True, help_text='图标', max_length=50, null=True, verbose_name='图标')),
                ('code', models.CharField(blank=True, help_text='编码', max_length=50, null=True, verbose_name='编码')),
                ('url', models.CharField(blank=True, help_text='url', max_length=128, null=True, unique=True)),
                ('parent', models.ForeignKey(blank=True, help_text='父菜单', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_menu', to='system.Menu', verbose_name='父菜单')),
            ],
            options={
                'verbose_name': '菜单表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('order_sn', models.CharField(blank=True, help_text='订单号', max_length=100, null=True, unique=True, verbose_name='订单号')),
                ('pay_type', models.IntegerField(choices=[(1, '微信'), (2, '支付宝')], default=1, help_text='支付方式', verbose_name='支付方式')),
                ('order_status', models.CharField(choices=[('paying', '待支付'), ('TRADE_SUCCESS', '成功'), ('TRADE_CLOSED', '超时关闭'), ('WAIT_BUYER_PAY', '交易创建'), ('TRADE_FINISHED', '交易结束')], default='paying', help_text='支付状态', max_length=100, verbose_name='支付状态')),
                ('nonce_str', models.CharField(blank=True, help_text='微信订单号', max_length=100, null=True, verbose_name='微信订单号')),
                ('trade_no', models.CharField(blank=True, help_text='支付宝订单号', max_length=100, null=True, verbose_name='支付宝订单号')),
                ('order_num', models.DecimalField(decimal_places=3, default=0.0, help_text='订单金额', max_digits=20, verbose_name='订单金额')),
                ('pay_time', models.DateTimeField(blank=True, help_text='支付时间', null=True, verbose_name='支付时间')),
                ('post_script', models.TextField(blank=True, help_text='用户备注', max_length=200, null=True, verbose_name='用户备注')),
                ('address', models.CharField(help_text='送货地址', max_length=100, verbose_name='送货地址')),
                ('sign_name', models.CharField(help_text='收货人', max_length=30, verbose_name='收货人')),
                ('sign_mobile', models.CharField(help_text='收货人电话', max_length=20, verbose_name='收货人电话')),
                ('user', models.ForeignKey(help_text='用户', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OrderGood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('num', models.IntegerField(default=0, verbose_name='商品数量')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.Good')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_list', to='system.Order')),
            ],
            options={
                'verbose_name': '订单商品',
                'verbose_name_plural': '订单商品',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('menu_list', models.ManyToManyField(related_name='role_list', to='system.Menu')),
            ],
            options={
                'verbose_name': '角色表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('name', models.CharField(max_length=60, verbose_name='名称')),
                ('type', models.CharField(choices=[('firm', '公司'), ('department', '部门')], default='department', max_length=20, verbose_name='类型')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_structure', to='system.Structure', verbose_name='父类架构')),
            ],
            options={
                'verbose_name': '组织架构',
                'verbose_name_plural': '组织架构',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('order', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_list', to='system.Album')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(default='', max_length=100, verbose_name='省份')),
                ('city', models.CharField(default='', max_length=100, verbose_name='城市')),
                ('district', models.CharField(default='', max_length=100, verbose_name='区域')),
                ('address', models.CharField(default='', max_length=100, verbose_name='详细地址')),
                ('signer_name', models.CharField(default='', max_length=100, verbose_name='签收人')),
                ('signer_mobile', models.CharField(default='', max_length=11, verbose_name='电话')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '收货地址',
                'verbose_name_plural': '收货地址',
            },
        ),
        migrations.CreateModel(
            name='UserFavorate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.Good', verbose_name='商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户收藏',
                'verbose_name_plural': '用户收藏',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户信息表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_user', models.IntegerField(blank=True, help_text='创建者', null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_user', models.IntegerField(blank=True, help_text='修改者', null=True, verbose_name='修改人')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('message_type', models.IntegerField(choices=[(1, '留言'), (2, '投诉'), (3, '询问'), (4, '售后'), (5, '求购')], default=1, help_text='留言类型:(1,留言),(2,投诉),(3,询问),(4,售后),(5,求购)', verbose_name='留言类型')),
                ('subject', models.CharField(help_text='留言主题', max_length=100, verbose_name='留言主题')),
                ('text', models.TextField(default='', help_text='留言内容', max_length=1000, verbose_name='留言内容')),
                ('file', models.FileField(help_text='上传的文件', upload_to='message', verbose_name='上传的文件')),
                ('user', models.ForeignKey(help_text='用户', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='good',
            field=models.ForeignKey(blank=True, help_text='商品', null=True, on_delete=django.db.models.deletion.CASCADE, to='system.Good', verbose_name='商品'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(blank=True, help_text='用户', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='banner',
            name='good',
            field=models.ForeignKey(blank=True, help_text='商品', null=True, on_delete=django.db.models.deletion.CASCADE, to='system.Good', verbose_name='商品'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role_list',
            field=models.ManyToManyField(related_name='user_list', to='system.Role'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='userfavorate',
            unique_together={('user', 'good')},
        ),
        migrations.AlterUniqueTogether(
            name='track',
            unique_together={('album', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='cart',
            unique_together={('good', 'user')},
        ),
    ]
